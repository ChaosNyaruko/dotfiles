set nocompatible
set nu
set rnu
set hlsearch
set incsearch
set ignorecase
set smartcase
set mouse=a
set shiftwidth=4                " Use indents of 4 spaces
set expandtab                   " Tabs are spaces, not tabs
set tabstop=4                   " An indentation every four columns
set softtabstop=4               " Let backspace delete indent
set noshowmode
set wildmenu
set wildmode=list:longest,full
set noswapfile
set hidden


if has('clipboard')
	if has('unnamedplus')  " When possible use + register for copy-paste
	    set clipboard=unnamed,unnamedplus
	else         " On mac and Windows, use * register for copy-paste
	    set clipboard=unnamed
	endif
endif

if has('statusline')
    set laststatus=2

    " Broken down into easily includeable segments
    set statusline=%<%f\                     " Filename
    set statusline+=%w%h%m%r                 " Options
    set statusline+=\ [%{&ff}/%Y]            " Filetype
    set statusline+=\ [%{getcwd()}]          " Current dir
    set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
    " set statusline+=%{fugitive#statusline()} " Git Hotness
endif

call plug#begin('~/.vim/plugged')

Plug 'fatih/vim-go', {'tag': '*'}
Plug 'tpope/vim-commentary'
Plug 'easymotion/vim-easymotion'
" Plug 'rakr/vim-one'
" Plug 'vim-airline/vim-airline'
" Plug 'vim-airline/vim-airline-themes'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive' 
Plug 'tpope/vim-surround'
Plug 'itchyny/lightline.vim'
Plug 'morhetz/gruvbox'
Plug 'preservim/nerdtree'
Plug 'ycm-core/YouCompleteMe'

call plug#end()
set nolist
set listchars=space:\ ,tab:>\ 
set backspace=indent,eol,start
" colorscheme one
" let g:airline#extensions#tabline#enabled = 1

" Visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

let g:lightline = {
  \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
  \             [ 'readonly', 'filename', 'modified', 'pwd' ] ]
  \ },
  \ 'component': {
      \   'pwd': '%{getcwd()}'
  \ },
  \ }

colorscheme gruvbox


" Key Mappings
noremap <C-p> :Files<CR>
noremap <leader>f :Rg<CR>
inoremap <C-f> <Right>
inoremap <C-b> <Left>

" vim-go navi mappings
autocmd FileType go nnoremap <buffer> gr :GoReferrers<CR>
autocmd FileType go nnoremap <buffer> gi :GoImplements<CR>
autocmd FileType go nnoremap <buffer> goc :GoCallers<CR>

" just something interesting saw in coding videos
autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

set background=dark
function! ResCur()
    if line("'\"") <= line("$")
        silent! normal! g`"
        return 1
    endif
endfunction

augroup resCur
    autocmd!
    autocmd BufWinEnter * call ResCur()
augroup END

" autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif

 
